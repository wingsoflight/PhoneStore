{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data.service.ts","./src/app/phone-detail/phone-detail.component.ts","./src/app/phone-detail/phone-detail.component.html","./src/app/phone.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, NgModule } from '@angular/core';\r\nimport { DataService } from './data.service';\r\nimport { Phone } from './phone';\r\n\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './app.component.html',\r\n    providers: [DataService]\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n\r\n    phone: Phone = new Phone();   // изменяемый товар\r\n    phones: Phone[];                // массив товаров\r\n    tableMode: boolean = true;          // табличный режим\r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n    ngOnInit() {\r\n        this.loadPhones();    // загрузка данных при старте компонента  \r\n    }\r\n    // получаем данные через сервис\r\n    loadPhones() {\r\n        this.dataService.getPhones()\r\n            .subscribe((data: Phone[]) => this.phones = data);\r\n    }\r\n    // сохранение данных\r\n    save() {\r\n        if (this.phone.id == null) {\r\n            this.dataService.createPhone(this.phone)\r\n                .subscribe((data: Phone) => this.phones.push(data));\r\n        } else {\r\n            this.dataService.updatePhone(this.phone)\r\n                .subscribe(data => this.loadPhones());\r\n        }\r\n        this.cancel();\r\n    }\r\n    editPhone(p: Phone) {\r\n        this.phone = p;\r\n    }\r\n    cancel() {\r\n        this.phone = new Phone();\r\n        this.tableMode = true;\r\n    }\r\n    delete(p: Phone) {\r\n        this.dataService.deletePhone(p.id)\r\n            .subscribe(data => this.loadPhones());\r\n    }\r\n    add() {\r\n        this.cancel();\r\n        this.tableMode = false;\r\n    }\r\n    selectPhone(p: Phone): void{\r\n        this.phone = p;\r\n    }\r\n}","<h1>Список моделей</h1>\r\n<input type=\"button\" value=\"Добавить\" class=\"btn btn-default\" (click)=\"add()\" />\r\n<table *ngIf=\"tableMode; else create\" class=\"table table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <td>Модель</td>\r\n            <td>Производитель</td>\r\n            <td>Цена</td>\r\n            <td></td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let p of phones\">\r\n            <ng-template [ngIf]=\"phone?.id != p.id\" [ngIfElse]=\"edit\">\r\n                <td>{{p?.name}}</td>\r\n                <td>{{p?.price}}</td>\r\n                <td>\r\n                    <button class=\"btn btn-sm btn-primary\" (click)=\"editPhone(p)\">Изменить</button>\r\n                    <button class=\"btn btn-sm btn-danger\" (click)=\"delete(p)\">Удалить</button>\r\n                </td>\r\n            </ng-template>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<!--шаблон для редактирования-->\r\n<ng-template #edit>\r\n    <td>\r\n        <input type=\"text\" [(ngModel)]=\"phone.name\" class=\"form-control\" />\r\n    </td>\r\n    <td>\r\n        <input type=\"number\" [(ngModel)]=\"phone.price\" class=\"form-control\" />\r\n    </td>\r\n    <td>\r\n        <input type=\"button\" value=\"Сохранить\" (click)=\"save()\" class=\"btn btn-sm btn-success\" />\r\n        <input type=\"button\" value=\"Отмена\" (click)=\"cancel()\" class=\"btn btn-sm btn-warning\" />\r\n    </td>\r\n</ng-template>\r\n\r\n<!--шаблон для добавления-->\r\n<ng-template #create>\r\n    <div class=\"form-group\">\r\n        <label>Модель</label>\r\n        <input type=\"text\" [(ngModel)]=\"phone.name\" class=\"form-control\" />\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>Цена</label>\r\n        <input type=\"number\" [(ngModel)]=\"phone.price\" class=\"form-control\" />\r\n    </div>\r\n    <div>\r\n        <input type=\"button\" value=\"Сохранить\" (click)=\"save()\" class=\"btn btn-success\" />\r\n        <input type=\"button\" value=\"Отмена\" (click)=\"cancel()\" class=\"btn btn-warning\" />\r\n    </div>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';;\r\nimport { PhoneDetailComponent } from './phone-detail/phone-detail.component'\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n    { path: 'detail/:id', component: PhoneDetailComponent },\r\n];\r\n@NgModule({\r\n    imports: [BrowserModule, FormsModule, HttpClientModule, RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n    declarations: [AppComponent],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Phone } from './phone';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    private url = \"/api/phones\";\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getPhones() {\r\n        return this.http.get(this.url);\r\n    }\r\n\r\n    getPhone(id: number) {\r\n        return this.http.get(this.url + '/' + id);\r\n    }\r\n\r\n    createPhone(phone: Phone) {\r\n        return this.http.post(this.url, phone);\r\n    }\r\n    updatePhone(phone: Phone) {\r\n\r\n        return this.http.put(this.url, phone);\r\n    }\r\n    deletePhone(id: number) {\r\n        return this.http.delete(this.url + '/' + id);\r\n    }\r\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Phone } from '../phone';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\n\n@Component({\n  selector: 'phone-detail',\n    templateUrl: './phone-detail.component.html',\n    providers: [DataService]\n})\nexport class PhoneDetailComponent implements OnInit {\n    @Input() phone: Phone;\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private dataService: DataService,\r\n        private location: Location\r\n    ) { }\n\n    ngOnInit(): void {\n        this.getPhone();\n    }\n\n    getPhone(): void {\n        const id = +this.route.snapshot.paramMap.get('id');\r\n        this.dataService.getPhone(id)\r\n            .subscribe((data: Phone) => this.phone = data);\r\n    }\n\n}\n","<div *ngIf=\"phone\">\r\n    <h2>{{phone.name | uppercase}}</h2>\r\n    <div><span>id: </span>{{phone.id}}</div>\r\n    <div>\r\n        <label>\r\n            Model:\r\n            <input [(ngModel)]=\"phone.name\" placeholder=\"Model\" />\r\n        </label>\r\n        <label>\r\n            Price:\r\n            <input [(ngModel)]=\"phone.price\" placeholder=\"Price\" />\r\n        </label>\r\n        <>\r\n    </div>\r\n</div>","export class Phone{\r\n    constructor(\r\n        public id?: number,\r\n        public name?: string,\r\n        public price?: number,\r\n        public manufacturerId?: number\r\n    ) { }\r\n}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { AppModule } from './app/app.module';\r\n\r\nenableProdMode();\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);"],"sourceRoot":"webpack:///"}